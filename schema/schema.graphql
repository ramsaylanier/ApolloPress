type Menu {
  id: ID!
  name: String
  items: [MenuItem]
}

type MenuItem {
  id: ID!
  linkedId: Int
  order: Int
  navitem: Post
  children: [MenuItem]
}

enum MetaType {
  thumbnailID
  attachedFile
  reactLayout
  amazonInfo
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Post {
  id: ID!
  post_title: String
  post_content: String
  post_excerpt: String
  post_status: String
  post_type: String
  post_name: String
  menu_order: Int
  layout: Postmeta
  thumbnail: String
  post_meta(keys: [MetaType], after: String, first: Int, before: String, last: Int): PostmetaConnection
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]
}

type PostEdge {
  node: Post
  cursor: String!
}

type Postmeta {
  id: ID!
  meta_id: Int
  post_id: Int
  meta_key: String
  meta_value: String
  connecting_post: Post
}

type PostmetaConnection {
  pageInfo: PageInfo!
  edges: [PostmetaEdge]
}

type PostmetaEdge {
  node: Postmeta
  cursor: String!
}

type Root {
  viewer: User
  posts(post_type: String = "post", after: String, first: Int, before: String, last: Int): PostConnection
}

type Setting {
  id: ID!
  uploads: String
  amazonS3: Boolean
}

type User {
  id: ID!
  settings: Setting
  posts(post_type: String = "post", after: String, first: Int, before: String, last: Int): PostConnection
  page(post_name: String): Post
  menus(name: String): Menu
  postmeta(post_id: Int, after: String, first: Int, before: String, last: Int): PostmetaConnection
}
